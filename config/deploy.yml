# Name of your application. Used to uniquely configure containers.
service: japongo

# Name of the container image.
image: balatzar/japongo

# Deploy to these servers.
servers:
  - 188.245.86.168

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  username: balatzar

  # Always use an access token rather than real password when possible.
  password:
    - KAMAL_REGISTRY_PASSWORD
# Inject ENV variables into containers (secrets come from .env).
# Remember to run `kamal env push` after making changes!
# env:
#   clear:
#     DB_HOST: 192.168.0.2
#   secret:
#     - RAILS_MASTER_KEY

env:
  clear:
    RAILS_ENV: production
  secret:
    - RAILS_MASTER_KEY
    - POSTGRES_PASSWORD

# Use a different ssh user than root
# ssh:
#   user: app

builder:
  local: {}
  args:
    RUBY_VERSION: 3.2.2

# Use accessory services (secrets come from .env).
accessories:
  db:
    image: postgres:14 # You can adjust the version if needed
    host: 188.245.86.168
    port: 5432
    env:
      clear:
        POSTGRES_USER: japongo_user
        POSTGRES_DB: japongo_db
      secret:
        - POSTGRES_PASSWORD
    directories:
      - data:/var/lib/postgresql/data # Mount a volume to persist the database data

traefik:
  args:
    entryPoints:
      web:
        address: ":80"
      dashboard:
        address: ":8080"
    providers:
      docker: {}
    api:
      dashboard: true
  labels:
    traefik.enable: "true"
    traefik.http.routers.japongo-web.rule: "Host(`188.245.86.168`)"
    traefik.http.routers.japongo-web.entrypoints: "web"
    traefik.http.services.japongo-web.loadbalancer.server.port: "3000"
    traefik.http.routers.dashboard.rule: "Host(`188.245.86.168`)"
    traefik.http.routers.dashboard.entrypoints: "dashboard"
    traefik.http.services.dashboard.loadbalancer.server.port: "8080"
# Configure a custom healthcheck (default is /up on port 3000)
# healthcheck:
#   path: /healthz
#   port: 4000

# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
#
# If your app is using the Sprockets gem, ensure it sets `config.assets.manifest`.
# See https://github.com/basecamp/kamal/issues/626 for details
#
# asset_path: /rails/public/assets

# Configure rolling deploys by setting a wait time between batches of restarts.
# boot:
#   limit: 10 # Can also specify as a percentage of total hosts, such as "25%"
#   wait: 2

# Configure the role used to determine the primary_host. This host takes
# deploy locks, runs health checks during the deploy, and follow logs, etc.
#
# Caution: there's no support for role renaming yet, so be careful to cleanup
#          the previous role on the deployed hosts.
# primary_role: web

# Controls if we abort when see a role with no hosts. Disabling this may be
# useful for more complex deploy configurations.
#
# allow_empty_roles: false
